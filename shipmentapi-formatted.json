{  
   "swagger":"2.0",
   "info":{  
      "version":"v1.1",
      "title":"REACT"
   },
   "host": "react-api-qa.sorted.com",
   "basePath": "/react/shipments",
   "schemes": ["https","http"],
   "paths":{  
      "/":{  
         "post":{  
            "tags":[  
               "Shipments API"
            ],
            "summary": "Register Shipments",
            "description": "Register one or more shipments for tracking in Sorted.REACT.",
            "operationId":"Post",
            "consumes":[  
               "application/json-patch+json",
               "application/json",
               "text/json",
               "application/*+json"
            ],
            "produces":[  

            ],
            "parameters":[  
               {  
                  "name":"request",
                  "in":"body",
                  "required":false,
                  "schema":{  
                     "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.RegisterShipmentRequest"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"Success"
               }
            }
         }
      },
      "/{id}":{  
         "get":{  
            "tags":[  
               "Shipments API"
            ],
            "summary": "Get Shipment by Shipment ID",
            "description": "Retrieve the details of the specified shipment.",
            "operationId":"ByIdGet",
            "consumes":[  

            ],
            "produces":[  

            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"Success"
               }
            }
         },
         "put":{  
            "tags":[  
               "Shipments API"
            ],
            "summary": "Update Shipment",
            "description": "Update the details of a shipment.",
            "operationId":"ByIdPut",
            "consumes":[  
               "application/json-patch+json",
               "application/json",
               "text/json",
               "application/*+json"
            ],
            "produces":[  

            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "type":"string"
               },
               {  
                  "name":"shipment",
                  "in":"body",
                  "required":false,
                  "schema":{  
                     "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Shipment"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"Success"
               }
            }
         },
         "delete":{  
            "tags":[  
               "Shipments API"
            ],
            "summary": "Delete Shipment",
            "description": "Delete the specified shipment.",
            "operationId":"ByIdDelete",
            "consumes":[  

            ],
            "produces":[  

            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"Success"
               }
            }
         }
      },
      "/search":{  
         "get":{  
            "tags":[  
               "Shipments API"
            ],
            "summary": "Get Shipment",
            "description": "Returns shipments matching the provided query string parameters.",
            "operationId":"SearchGet",
            "consumes":[  

            ],
            "produces":[  

            ],
            "parameters":[  
               {  
                  "name":"tracking_references",
                  "in":"query",
                  "required":false,
                  "type":"array",
                  "items":{  
                     "type":"string"
                  },
                  "collectionFormat":"multi",
                  "uniqueItems":false
               },
               {  
                  "name":"custom_references",
                  "in":"query",
                  "required":false,
                  "type":"array",
                  "items":{  
                     "type":"string"
                  },
                  "collectionFormat":"multi",
                  "uniqueItems":false
               },
               {  
                  "name":"page",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"Success"
               }
            }
         }
      }
   },
   "definitions":{  
      "Sorted.React.Shipment.Api.DataContracts.Internal.Inbound.Shipment":{  
         "type":"object",
         "properties":{  
            "carrier":{  
               "type":"string"
            },
            "carrier_id":{  
               "type":"string"
            },
            "carrier_service_reference":{  
               "type":"string"
            },
            "shipped_date":{  
               "format":"date-time",
               "type":"string"
            },
            "order_date":{  
               "format":"date-time",
               "type":"string"
            },
            "promised_date":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.PromisedDate"
            },
            "expected_delivery_date":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.ExpectedDeliveryDate"
            },
            "addresses":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Address"
               }
            },
            "metadata":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Metadata"
               }
            },
            "shipment_type":{  
               "enum":[  
                  "delivery",
                  "return",
                  "pick_up",
                  "drop_off",
                  "drop_off_pick_up",
                  "return_drop_off"
               ],
               "type":"string"
            },
            "shipment_level":{  
               "format":"int32",
               "type":"integer"
            },
            "delivered_date":{  
               "format":"date-time",
               "type":"string"
            },
            "leg_number":{  
               "format":"int32",
               "type":"integer"
            },
            "lateness":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Internal.Inbound.Lateness"
            },
            "last_tracked":{  
               "format":"date-time",
               "type":"string"
            },
            "customer_id":{  
               "type":"string"
            },
            "correlation_id":{  
               "format":"uuid",
               "type":"string"
            },
            "tracking_event_timestamp":{  
               "format":"date-time",
               "type":"string"
            },
            "shipment_state":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Internal.Inbound.ShipmentState"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.PromisedDate":{  
         "type":"object",
         "properties":{  
            "start":{  
               "format":"date-time",
               "type":"string"
            },
            "end":{  
               "format":"date-time",
               "type":"string"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.ExpectedDeliveryDate":{  
         "type":"object",
         "properties":{  
            "start":{  
               "format":"date-time",
               "type":"string"
            },
            "end":{  
               "format":"date-time",
               "type":"string"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Address":{  
         "type":"object",
         "properties":{  
            "address_type":{  
               "enum":[  
                  "not_specified",
                  "origin",
                  "destination",
                  "return",
                  "billing",
                  "hub",
                  "alternative_delivery",
                  "other"
               ],
               "type":"string"
            },
            "reference":{  
               "type":"string"
            },
            "property_number":{  
               "type":"string"
            },
            "property_name":{  
               "type":"string"
            },
            "address_line1":{  
               "type":"string"
            },
            "address_line2":{  
               "type":"string"
            },
            "address_line3":{  
               "type":"string"
            },
            "locality":{  
               "type":"string"
            },
            "region":{  
               "type":"string"
            },
            "postal_code":{  
               "type":"string"
            },
            "country_iso_code":{  
               "type":"string"
            },
            "lat_long":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.LatLong"
            },
            "external_references":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.ExternalAddressReference"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Metadata":{  
         "type":"object",
         "properties":{  
            "key":{  
               "type":"string"
            },
            "value":{  
               "type":"string"
            },
            "type":{  
               "enum":[  
                  "string",
                  "datetime",
                  "datetimeoffset",
                  "boolean",
                  "integer",
                  "decimal",
                  "url"
               ],
               "type":"string"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Internal.Inbound.Lateness":{  
         "type":"object",
         "properties":{  
            "is_late":{  
               "type":"boolean"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Internal.Inbound.ShipmentState":{  
         "type":"object",
         "properties":{  
            "state":{  
               "enum":[  
                  "unknown",
                  "action_required",
                  "arrived_at_destination_country",
                  "at_customs",
                  "awaiting_drop_off",
                  "carrier_changed",
                  "carrier_refused_to_collect",
                  "carrier_unable_to_collect",
                  "shipment_issue",
                  "cleared_through_customs",
                  "collected_by_carrier",
                  "collection_rescheduled",
                  "collection_scheduled",
                  "customs_charges_due",
                  "damaged",
                  "delayed",
                  "delivered",
                  "delivered_damaged",
                  "delivered_to_neighbour",
                  "delivered_to_reception",
                  "delivered_to_safe_location",
                  "delivery_address_changed",
                  "delivery_attempted",
                  "delivery_failed",
                  "delivery_failed_card_left",
                  "delivery_refused",
                  "delivery_rescheduled",
                  "delivery_scheduled",
                  "destroyed",
                  "dispatched",
                  "dropped_off",
                  "exchange_failed",
                  "exchange_successful",
                  "failed_to_collect",
                  "final_delivery_attempt",
                  "for_information",
                  "held_by_carrier",
                  "incorrect_label",
                  "in_transit",
                  "in_transit_waiting",
                  "lost",
                  "missing",
                  "missing_manifest",
                  "misrouted",
                  "out_for_delivery",
                  "partially_delivered",
                  "proof_of_delivery_available",
                  "ready_for_collection",
                  "refunded",
                  "will_be_returned_to_sender",
                  "returned_to_sender",
                  "late",
                  "collection_reminder",
                  "final_collection_reminder",
                  "may_be_missing",
                  "unable_to_track"
               ],
               "type":"string"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.LatLong":{  
         "type":"object",
         "properties":{  
            "latitude":{  
               "format":"double",
               "type":"number"
            },
            "longitude":{  
               "format":"double",
               "type":"number"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.ExternalAddressReference":{  
         "type":"object",
         "properties":{  
            "type":{  
               "type":"string"
            },
            "value":{  
               "type":"string"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.RegisterShipmentRequest":{  
         "type":"object",
         "properties":{  
            "shipments":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Shipment"
               }
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Shipment":{  
         "type":"object",
         "properties":{  
            "tracking_references":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "type":"string"
               }
            },
            "custom_references":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "type":"string"
               }
            },
            "tags":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "type":"string"
               }
            },
            "carrier":{  
               "type":"string"
            },
            "carrier_service":{  
               "type":"string"
            },
            "shipped_date":{  
               "format":"date-time",
               "type":"string"
            },
            "order_date":{  
               "format":"date-time",
               "type":"string"
            },
            "promised_date":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.PromisedDate"
            },
            "expected_delivery_date":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.ExpectedDeliveryDate"
            },
            "addresses":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Address"
               }
            },
            "consumer":{  
               "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Consumer"
            },
            "metadata":{  
               "uniqueItems":false,
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Metadata"
               }
            },
            "retailer":{  
               "type":"string"
            },
            "shipment_type":{  
               "enum":[  
                  "delivery",
                  "return",
                  "pick_up",
                  "drop_off",
                  "drop_off_pick_up",
                  "return_drop_off"
               ],
               "type":"string"
            }
         }
      },
      "Sorted.React.Shipment.Api.DataContracts.Public.Inbound.Consumer":{  
         "type":"object",
         "properties":{  
            "reference":{  
               "type":"string"
            },
            "email":{  
               "type":"string"
            },
            "phone":{  
               "type":"string"
            },
            "mobile_phone":{  
               "type":"string"
            },
            "first_name":{  
               "type":"string"
            },
            "last_name":{  
               "type":"string"
            },
            "middle_name":{  
               "type":"string"
            },
            "title":{  
               "type":"string"
            }
         }
      }
   },
   "securityDefinitions":{  
      "x-api-key":{  
         "name":"x-api-key",
         "in":"header",
         "type":"apiKey",
         "description":"Please enter your Api Key into field"
      }
   },
   "security":[  
      {  
         "x-api-key":[  

         ]
      }
   ]
}